#include<iostream>
#include<cmath>
using namespace std;
long n, h[100000] = {}, c[100000] = {};
long hmax = 0;
long long f(long x)
{
	long long kq = 0;
	for (long i = 0; i < n; i++)
	{
		kq += abs(h[i] - x)*c[i];
	}
	return kq;
}
long long tamphan()
{
	long l = 0, r = hmax, m1, m2;
	while (r - l > 3)
	{
		m1 = l + (r - l) / 3;
		m2 = r - (r - l) / 3;
		if (f(m1) > f(m2)) l = m1;
		else r = m2;
	}
	long long ress = f(l);
	for (long i = l; i <= r; i++)
	{
		if (ress > f(i)) ress = f(i);
	}
	return ress;
}
int main()
{
	int t;
	cin >> t;
	while (true)
	{
		if (t == 0) break;
		cin >> n;
		for (long i = 0; i < n; i++)
		{
			cin >> h[i];
			if (h[i] > hmax) hmax = h[i];
		}
		for (long i = 0; i < n; i++)
		{
			cin >> c[i];
		}
		cout << tamphan() << endl;
		t--;
	}
}